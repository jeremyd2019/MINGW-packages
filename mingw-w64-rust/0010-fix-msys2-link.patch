diff --git a/compiler/rustc_target/src/spec/base/cygwin.rs b/compiler/rustc_target/src/spec/base/cygwin.rs
index 819d1d68a71..c4f0e91e442 100644
--- a/compiler/rustc_target/src/spec/base/cygwin.rs
+++ b/compiler/rustc_target/src/spec/base/cygwin.rs
@@ -14,7 +14,7 @@ pub(crate) fn opts() -> TargetOptions {
         LinkerFlavor::Gnu(Cc::Yes, Lld::No),
         &["-Wl,--disable-dynamicbase", "-Wl,--enable-auto-image-base"],
     );
-    let cygwin_libs = &["-lcygwin", "-lgcc", "-lcygwin", "-luser32", "-lkernel32", "-lgcc_s"];
+    let cygwin_libs = &["-lmsys-2.0", "-lgcc", "-lmsys-2.0", "-luser32", "-lkernel32", "-lgcc_s"];
     let mut late_link_args =
         TargetOptions::link_args(LinkerFlavor::Gnu(Cc::No, Lld::No), cygwin_libs);
     crate::spec::add_link_args(
diff --git a/compiler/rustc_target/src/spec/targets/x86_64_pc_cygwin.rs b/compiler/rustc_target/src/spec/targets/x86_64_pc_cygwin.rs
index eac4caf41c8..7f8d684bc86 100644
--- a/compiler/rustc_target/src/spec/targets/x86_64_pc_cygwin.rs
+++ b/compiler/rustc_target/src/spec/targets/x86_64_pc_cygwin.rs
@@ -6,7 +6,7 @@ pub(crate) fn target() -> Target {
     base.add_pre_link_args(LinkerFlavor::Gnu(Cc::No, Lld::No), &["-m", "i386pep"]);
     base.add_pre_link_args(LinkerFlavor::Gnu(Cc::Yes, Lld::No), &["-m64"]);
     base.max_atomic_width = Some(64);
-    base.linker = Some("x86_64-pc-cygwin-gcc".into());
+    base.linker = Some("x86_64-pc-msys-gcc".into());
     Target {
         llvm_target: "x86_64-pc-cygwin".into(),
         pointer_width: 64,
